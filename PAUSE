# car.py

import cv2
import numpy as np
import keyboard

img_path = 'plate.jpg'
ori_img = cv2.imread(img_path)

src = []
src.append([126, 218])
src.append([343, 266])
src.append([340, 345])
src.append([121, 283])

src_np = np.array(src, dtype=np.float32)

width = max(np.linalg.norm(src_np[0] - src_np[1]), np.linalg.norm(src_np[2] - src_np[3]))
height = max(np.linalg.norm(src_np[0] - src_np[3]), np.linalg.norm(src_np[1] - src_np[2]))

width_ratio = (width / height)
height_ratio = 1

dst_np = np.array([[0, 0],
                   [int(width_ratio * 300), 0],
                   [int(width_ratio * 300), int(height_ratio * 300)],
                   [0, int(height_ratio * 300)]
                   ], dtype=np.float32)

M = cv2.getPerspectiveTransform(src_np, dst_np)
result = cv2.warpPerspective(ori_img, M, (200, 200), height_ratio * 300)
print("Perspective Transformation :\n", M)

cv2.imshow('img', ori_img)

print("Press the space bar to get 4 matching points on the license plate.")

if cv2.waitKey(0) == ord(' '):
    for xx, yy in src:
        cv2.circle(ori_img, (xx, yy), 5, (0, 255, 0), -1)
cv2.imshow('img', ori_img)
print("original points : \n", src_np)

if cv2.waitKey(0) == ord(' '):
    cv2.imshow('result', result)
    print("\ndestination points : \n", dst_np)

if cv2.waitKey(0) == ord(' '):
    cv2.destroyAllWindows()

--------------------------------------------------------



import cv2
import numpy as np

img_path = 'plate.jpg'
ori_img = cv2.imread(img_path)

src = []


# mouse callback handler
def mouse_handler(event, x, y, flags, param):
    if event == cv2.EVENT_LBUTTONUP:
        img = ori_img.copy()

        src.append([x, y])

        for xx, yy in src:
            cv2.circle(img, (xx, yy), 5, (0, 255, 0), -1)

        cv2.imshow('Original Image - Car', img)

        # perspective transform
        if len(src) == 4:
            src_np = np.array(src, dtype=np.float32)
            print("original points : \n", src_np)


cv2.namedWindow('Original Image - Car')
cv2.setMouseCallback('Original Image - Car', mouse_handler)

cv2.imshow('Original Image - Car', ori_img)
if cv2.waitKey(0) == 32:
    cv2.destroyAllWindows()


----------------------------------------------------------


import cv2
img = cv2.imread('plate.jpg')
cv2.imshow("Original Image", img)
cv2.waitKey(0)

